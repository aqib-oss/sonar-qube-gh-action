name: main-workflow

on:
  push:
    branches: ["main"]

permissions:
  # Needed for managing releases and pushing code
  contents: write
  # For GitHub Pages
  pages: write
  # For auth to third-party services
  id-token: write

concurrency:
  group: "sonar_qube_gh_action-${{ github.head_ref }}"
  cancel-in-progress: false

env:
  PYTHON_VERSION: "3.11"
  TEST_IMPORT: "${{ vars.TEST_IMPORT_STATEMENT }}"
  LINK_TO_RELEASES: "https://github.com/${{ github.repository }}/releases"
  SEMVER_PAT: ${{ secrets.SEMVER_GH_TOKEN }}
  UV_LOCK_VER_COMMIT_MSG: "chore: update uv.lock with new version"

jobs:
  pre_check:
    runs-on: ubuntu-latest
    outputs:
      is_uv_lock_version_sync_commit: ${{ steps.check_last_git_commit_message.outputs.is_uv_lock_version_sync_commit }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check last commit message for uv.lock version sync
        id: check_last_git_commit_message
        run: |
          if git log -1 --pretty=%B | grep -Fq "${{ env.UV_LOCK_VER_COMMIT_MSG }}"; then
            echo "is_uv_lock_version_sync_commit=true" >> $GITHUB_OUTPUT
          else
            echo "is_uv_lock_version_sync_commit=false" >> $GITHUB_OUTPUT
          fi

  main-workflow:
    needs: pre_check
    if: needs.pre_check.outputs.is_uv_lock_version_sync_commit == 'false'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install UV
        uses: astral-sh/setup-uv@v5
        with:
          # Install a specific version of uv.
          version: "0.7.12"

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Install the project
        run: uv sync --locked --all-extras --dev

      - name: Unit tests
        run: uv run pytest

      - name: SonarQube Cloud scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.SEMVER_GH_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Build
        run: uv build

      - name: Action | Semantic Version Release
        id: release
        # Adjust tag with desired version if applicable.
        uses: python-semantic-release/python-semantic-release@v10.0.2
        with:
          github_token: ${{ secrets.SEMVER_GH_TOKEN }}
          git_committer_name: "github-actions"
          git_committer_email: "actions@users.noreply.github.com"

      - name: Action | Sync version of this project in uv.lock file
        shell: bash
        run: |
          # Upgrade uv.lock with the new version.
          uv lock --upgrade-package sonar-qube-gh-action
          # Commit the changes.
          git config --local user.name "github-actions"
          git config --local user.email "actions@users.noreply.github.com"
          git add uv.lock
          git commit -m "${{ env.UV_LOCK_VER_COMMIT_MSG }}" || echo "No changes to commit"
          git push origin main || echo "No changes to push"

      - name: Publish | Upload to GitHub Release Assets
        uses: python-semantic-release/publish-action@v10.0.2
        if: steps.release.outputs.released == 'true'
        with:
          github_token: ${{ secrets.SEMVER_GH_TOKEN }}
          tag: ${{ steps.release.outputs.tag }}
