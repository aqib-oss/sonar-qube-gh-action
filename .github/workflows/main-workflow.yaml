name: main-workflow

on:
  push:
    branches: ["main"]

permissions:
  # Needed for managing releases and pushing code
  contents: write
  # For GitHub Pages
  pages: write
  # For auth to third-party services
  id-token: write

concurrency:
  group: "sonar_qube_gh_action-${{ github.head_ref }}"
  cancel-in-progress: false

env:
  PYTHON_VERSION: "3.11"
  TEST_IMPORT: "${{ vars.TEST_IMPORT_STATEMENT }}"
  LINK_TO_RELEASES: "https://github.com/${{ github.repository }}/releases"

jobs:
  main-workflow:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install UV
        uses: astral-sh/setup-uv@v5
        with:
          # Install a specific version of uv.
          version: "0.8.0"

      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Install the project
        run: uv sync --locked --all-extras --dev

      - name: Unit tests
        run: uv run pytest

      - name: SonarQube Cloud scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.SEMVER_GH_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Action | Semantic Version Release
        id: release
        # Adjust tag with desired version if applicable.
        uses: python-semantic-release/python-semantic-release@v10.2.0
        with:
          github_token: ${{ secrets.SEMVER_GH_TOKEN }}
          git_committer_name: "github-actions"
          git_committer_email: "actions@users.noreply.github.com"

      - name: Publish | Upload to GitHub Release Assets
        uses: python-semantic-release/publish-action@v10.2.0
        if: steps.release.outputs.released == 'true'
        with:
          github_token: ${{ secrets.SEMVER_GH_TOKEN }}
          tag: ${{ steps.release.outputs.tag }}
